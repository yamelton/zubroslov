name: Reusable Deployment Workflow
on:
  workflow_call:
    inputs:
      environment_name:
        required: true
        type: string
      branch:
        required: true
        type: string
      api_url:
        required: true
        type: string
      server_url:
        required: true
        type: string
      bucket_name:
        required: true
        type: string
      image_tag:
        required: true
        type: string
      env_param:
        required: false
        type: string
        default: ""
    secrets:
      SERVER_HOST:
        required: true
      SERVER_USER:
        required: true
      SSH_KEY:
        required: true
      YC_STORAGE_ACCESS_KEY:
        required: true
      YC_STORAGE_SECRET_KEY:
        required: true
      YC_SERVICE_ACCOUNT_KEY:
        required: true
      YC_REGISTRY_ID:
        required: true

jobs:
  deploy-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ inputs.branch }}

      - uses: actions/setup-node@v3
        with:
          node-version: 18.x

      - name: Install dependencies and build
        env:
          VITE_API_URL: ${{ inputs.api_url }}
          VITE_SERVER_URL: ${{ inputs.server_url }}
        run: |
          cd frontend
          npm ci
          npm run build -- --mode production

      - name: Configure AWS CLI for Yandex Object Storage
        run: |
          pip install awscli
          aws configure set aws_access_key_id ${{ secrets.YC_STORAGE_ACCESS_KEY }}
          aws configure set aws_secret_access_key ${{ secrets.YC_STORAGE_SECRET_KEY }}
          aws configure set default.region ru-central1
          aws configure set default.s3.endpoint_url storage.yandexcloud.net

      - name: Deploy to Object Storage
        run: |
          aws s3 sync frontend/dist/ s3://${{ inputs.bucket_name }}/ \
            --delete \
            --acl public-read \
            --cache-control "max-age=31536000" \
            --endpoint-url=https://storage.yandexcloud.net

  deploy-backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ inputs.branch }}

      - name: Setup Yandex Cloud CLI
        run: |
          # Устанавливаем yc
          curl -s https://storage.yandexcloud.net/yandexcloud-yc/install.sh | bash
          echo "$HOME/yandex-cloud/bin" >> $GITHUB_PATH
          sleep 2  # Даем время для обновления PATH

      - name: Configure YC CLI
        env:
          YC_SERVICE_ACCOUNT_KEY: ${{ secrets.YC_SERVICE_ACCOUNT_KEY }}
        run: |
          # Сохраняем ключ в файл
          mkdir -p ~/.config/yandex-cloud
          echo "$YC_SERVICE_ACCOUNT_KEY" > ~/.config/yandex-cloud/key.json
          
          # Настраиваем профиль
          yc config profile create github-actions
          yc config set service-account-key ~/.config/yandex-cloud/key.json

      - name: Login to Yandex Container Registry
        run: |
          # Генерируем IAM-токен и логинимся
          IAM_TOKEN=$(yc iam create-token)
          echo "$IAM_TOKEN" | docker login --username iam --password-stdin cr.yandex

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: ./backend
          push: true
          tags: cr.yandex/${{ secrets.YC_REGISTRY_ID }}/zubroslov-api:${{ inputs.image_tag }}

      - name: Debug SSH key
        run: |
          echo "Using SERVER_HOST: ${{ secrets.SERVER_HOST }}"
          echo "Using SERVER_USER: ${{ secrets.SERVER_USER }}"
          echo "Checking if SSH_KEY is set: ${{ secrets.SSH_KEY != '' }}"
          
      - name: Prepare VM directories
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_KEY }}
          debug: true
          script: |
            mkdir -p /home/ubuntu/zubroslov/scripts
            mkdir -p /home/ubuntu/zubroslov/logs
      
      - name: Copy deploy script to VM
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_KEY }}
          source: "deploy.sh"
          target: "/home/ubuntu/zubroslov/scripts"
          
      - name: Execute deploy script
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            chmod +x /home/ubuntu/zubroslov/scripts/deploy.sh
            /home/ubuntu/zubroslov/scripts/deploy.sh ${{ inputs.env_param }}
